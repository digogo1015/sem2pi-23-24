@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Agent" as User
participant ":ListBookingRequestUI" as UI
participant ":ListBookingRequestController" as Controller
participant ":Repositories" as Repositories
participant "repositories\n:Repositories" as repositories
participant "advertisementRepository:\nAdvertisementRepository" as AdvRep
participant "employeeRepository:\nEmployeeRepository" as EmpRep
participant ":Database" as Data



activate User

    User -> UI : asks to list the property booking requests
    activate UI

        UI --> User : requests beginning and ending date
    deactivate UI

    User -> UI : submits beginning and ending date
    activate UI

    UI -> Controller ** : create

    UI -> Controller : getVisitRequest(beginning date, ending date)
    activate Controller

    Controller -> Repositories:getInstance()
                    activate Repositories

    Repositories--> Controller: repositories
    deactivate Repositories

    Controller -> repositories : getUserSession().getUserEmail()
    activate repositories

    repositories --> Controller : email
    deactivate repositories

    Controller -> repositories : getAdvertisementRepository()
    activate repositories

    repositories --> Controller : AdvertisementRepository
    deactivate repositories

    Controller -> AdvRep : getAgentAdvertisements(email)
    activate AdvRep

    AdvRep --> Controller : AgentAdvertisementList
    deactivate AdvRep

    Controller -> AdvRep : getVisitRequestList(AgentAdvertisementList,\nbeginning date, ending date)
    activate AdvRep

    AdvRep --> Controller : visitList
    deactivate AdvRep

    Controller --> UI : visitList
    deactivate Controller

        UI --> User: shows booking request list for specific period
    deactivate UI
    
     User -> UI : selects a booking request
        activate UI
    
        UI ->  User : requests data (emailMessage)
        deactivate UI
    
         User -> UI : types and submits data
        activate UI

        UI -> Controller : respondToVisitRequest(emailMessage, visitRequest)
        activate Controller

        Controller -> Repositories:getInstance()
                            activate Repositories

            Repositories--> Controller: repositories
            deactivate Repositories

        Controller -> EmpRep : getEmployeeByEmail(email)
        activate EmpRep

        EmpRep --> Controller : employee
        deactivate EmpRep

        Controller -> AdvRep : getVisitRequestAdvertisement(visitRequest)
        activate AdvRep

        AdvRep --> Controller : advertisement
        deactivate

        Controller -> Controller : phoneNumber = getTelephoneNumber(employee)

        Controller -> Controller : name = getName(employee)

        Controller -> Controller : propertyAddress = getAddressOfProperty(advertisement)

        Controller -> Controller : generateResponse(phoneNumber, name, propertyAddress, emailMessage)
        activate Controller

        Controller --> Controller : response

        Controller -> Data : sendEmail(response)
        activate Data

        Data --> Controller : operation success
        deactivate Data

        Controller --> UI : operation success
        deactivate Controller

        UI -->  User : displays operation success

@enduml
